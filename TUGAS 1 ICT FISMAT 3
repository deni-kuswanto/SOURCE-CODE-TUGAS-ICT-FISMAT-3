//INI SOURCE CODE PERHITUNGAN

import numpy as np

alfa = np.radians(45)
beta = np.radians(45)
gamma = np.radians(90)

matriks_n = np.array([[np.cos(alfa)], [np.cos(beta)], [np.cos(gamma)]])
matriks_ntilde = np.array([[np.cos(alfa), np.cos(beta), np.cos(gamma)]])

#komponen tensor momen inersia
Ixx = 1/3
Iyy = 1/3
Izz = 2/3
Ixy = Izx = Iyx = -(1/4)
Iyz = Izy = 0
Ixz = 0

#tensor momen inersia
matriks_I = np.array([[Ixx, Ixy, Ixz],
                      [Iyx, Iyy, Iyz],
                      [Izx, Izy, Izz]])

# Menghitung perkalian matriks
hasil_perkalian = np.matmul(matriks_ntilde, np.matmul(matriks_I, matriks_n))

print("Vektor N:")
print(matriks_n,"\n")
print("Vektor Ntilde:")
print(matriks_ntilde,"\n")
print("komponen Ixx :",Ixx,"\n""komponen Iyy :",Iyy,"\n"
      "komponen Izz :",Izz,"\n""komponen Ixy :",Ixy,"\n"
      "komponen Iyz :",Iyz,"\n""komponen Ixy :",Ixz,"\n")
print("matriks i:")
print(matriks_I,"\n")
print("Hasil perkalian matriks:")
print(hasil_perkalian)




//INI SOURCE CODE PERHITUNGAN DAN VISUALISASI

import numpy as np
import matplotlib.pyplot as plt

alfa = np.radians(45)
beta = np.radians(45)
gamma = np.radians(90)

matriks_n = np.array([[np.cos(alfa)], [np.cos(beta)], [np.cos(gamma)]])
matriks_ntilde = np.array([[np.cos(alfa), np.cos(beta), np.cos(gamma)]])

#komponen tensor momen inersia
Ixx = 1/3
Iyy = 1/3
Izz = 2/3
Ixy = Izx = Iyx = -(1/4)
Iyz = Izy = 0
Ixz = 0

#tensor momen inersia
matriks_I = np.array([[Ixx, Ixy, Ixz],
                      [Iyx, Iyy, Iyz],
                      [Izx, Izy, Izz]])

# Menghitung perkalian matriks
hasil_perkalian = np.matmul(matriks_ntilde, np.matmul(matriks_I, matriks_n))

print("Vektor N:")
print(matriks_ntilde,"\n")
print("komponen Ixx :",Ixx,"\n""komponen Iyy :",Iyy,"\n"
      "komponen Izz :",Izz,"\n""komponen Ixy :",Ixy,"\n"
      "komponen Iyz :",Iyz,"\n""komponen Ixy :",Ixz,"\n")
print("matriks i:")
print(matriks_I,"\n")
print("Hasil perkalian matriks:")
print(hasil_perkalian)

plt.imshow (matriks_ntilde, interpolation='nearest', cmap=plt.cm.Greys)
plt.colorbar()
plt.show()
