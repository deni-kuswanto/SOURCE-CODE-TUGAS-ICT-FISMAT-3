//SOURCE CODE TUGAS MATRIKS ICT FISMAT 3


import numpy as np
import matplotlib.pyplot as plt

alfa = np.radians(45)
beta = np.radians(45)
gamma = np.radians(90)

matriks_n = np.array([[np.cos(alfa)], [np.cos(beta)], [np.cos(gamma)]])
matriks_ntilde = np.array([[np.cos(alfa), np.cos(beta), np.cos(gamma)]])

# Komponen tensor momen inersia
Ixx = 1/3
Iyy = 1/3
Izz = 2/3
Ixy = Izx = Iyx = -(1/4)
Iyz = Izy = 0
Ixz = 0

# Tensor momen inersia
matriks_I = np.array([[Ixx, Ixy, Ixz],
                      [Iyx, Iyy, Iyz],
                      [Izx, Izy, Izz]])

# Menghitung perkalian matriks
hasil_perkalian = np.matmul(matriks_ntilde, np.matmul(matriks_I, matriks_n))

def hitung_eigen(I):
    W, V = np.linalg.eig(I)
    return W, V

W, V = hitung_eigen(matriks_I)

print("Vektor N:")
print(matriks_n,"\n")
print("Vektor Ntilde:")
print(matriks_ntilde,"\n")
print("Komponen Ixx :", Ixx,"\n"
      "Komponen Iyy :", Iyy,"\n"
      "Komponen Izz :", Izz,"\n"
      "Komponen Ixy :", Ixy,"\n"
      "Komponen Iyz :", Iyz,"\n"
      "Komponen Ixy :", Ixz,"\n")
print("Matriks I:\n",matriks_I,"\n")
print("Hasil perkalian matriks:\n",hasil_perkalian,'\n')
print("Eigenvalues:", W,'\n')
print("Eigenvectors:\n",V)

plt.figure(figsize=(6, 6))

# Menampilkan matriks_n
plt.subplot(3, 1, 1)
plt.title("matriks n")
plt.imshow(matriks_n, cmap='gray', interpolation='nearest')
plt.colorbar()

# Menampilkan matriks_ntilde
plt.subplot(3, 1, 2)
plt.title("matriks ntilde")
plt.imshow(matriks_ntilde, cmap='gray', interpolation='nearest')
plt.colorbar()

# Menampilkan matriks_I
plt.subplot(3, 1, 3)
plt.title("matriks I")
plt.imshow(matriks_I, cmap='gray', interpolation='nearest')
plt.colorbar()

plt.tight_layout()
plt.show()
